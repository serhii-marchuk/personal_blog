name: Build and push by PR

on:
  pull_request:
    types: [ labeled ]
  push:
  workflow_dispatch:

permissions:
  id-token: write # Allows GitHub Actions to obtain OIDC tokens
  contents: read # Allows it to read repository contents

jobs:
  build:
    if: (github.event.pull_request.labels.*.name == 'deploy'
      || github.event_name == 'workflow_dispatch'
      || github.event_name == 'push')
      && github.ref != 'refs/heads/main'
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build the app
        run: |
          go mod tidy
          go build -o ./app ./cmd/main.go

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WIP_PROVIDER }}
          service_account: ${{ secrets.GCP_WIP_SA }}

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.GCP_REPO }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and push Docker image
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          SHORT_SHA=$(git rev-parse --short=7 ${{ github.sha }})
          IMAGE_NAME=${{ secrets.GCP_REPO }}/${{ secrets.GCP_PROJECT_ID }}/ar-blog/blog:$SHORT_SHA
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Output the image name
        run: echo "Pushed Docker image $IMAGE_NAME"